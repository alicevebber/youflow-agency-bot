from aiogram import Router, F
from aiogram.types import (
    Message,
    ReplyKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardRemove,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    CallbackQuery
)
from aiogram.fsm.context import FSMContext
from aiogram.filters import CommandStart

from handlers.main_brief import start_brief
from handlers.animations import welcome_sequence
import translations

router = Router()

# üîπ –•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start ‚Äî –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
@router.message(CommandStart())
async def select_language(message: Message, state: FSMContext):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"), KeyboardButton(text="üá¨üáß English"), KeyboardButton(text="üá∞üáø “ö–∞–∑–∞“õ—à–∞")]
        ],
        resize_keyboard=True
    )
    await message.answer("üí¨ –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Select language / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:", reply_markup=keyboard)

# üîπ –•–µ–Ω–¥–ª–µ—Ä –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
@router.message(F.text.in_(["üá∑üá∫ –†—É—Å—Å–∫–∏–π", "üá¨üáß English", "üá∞üáø “ö–∞–∑–∞“õ—à–∞"]))
async def send_welcome(message: Message, state: FSMContext):
    lang_map = {
        "üá∑üá∫ –†—É—Å—Å–∫–∏–π": "ru",
        "üá¨üáß English": "en",
        "üá∞üáø “ö–∞–∑–∞“õ—à–∞": "kz"
    }
    lang = lang_map.get(message.text, "ru")
    await state.update_data(lang=lang)

    await message.answer("‚åõ", reply_markup=ReplyKeyboardRemove())
    await welcome_sequence(message, lang=lang)
    await send_main_menu(message, lang)

# üîπ –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def send_main_menu(message: Message, lang: str):
    buttons = [
        [InlineKeyboardButton(text=translations.TEXT[lang]["menu_services"], callback_data="services")],
        [InlineKeyboardButton(text=translations.TEXT[lang]["menu_about"], callback_data="about")],
        [InlineKeyboardButton(text=translations.TEXT[lang]["menu_site"], url="https://youflow.agency/")],
        [InlineKeyboardButton(text=translations.TEXT[lang]["menu_request"], callback_data="request")],
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    await message.answer(translations.TEXT[lang]["menu_title"], reply_markup=keyboard)

# üîπ –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É" –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.callback_query(lambda c: c.data == "request")
async def handle_main_menu_request(callback: CallbackQuery, state: FSMContext):
    await start_brief(callback, state)

# üîπ –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –ø–æ –∫–Ω–æ–ø–∫–µ "–Ω–∞–∑–∞–¥"
@router.callback_query(lambda c: c.data == "back_to_menu")
async def back_to_main(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    lang = data.get("lang", "ru")
    await send_main_menu(callback.message, lang)
    await callback.answer()

# üîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é" –≤ —á–∞—Ç–µ
@router.message(F.text.in_([
    translations.TEXT["ru"]["menu_button"],
    translations.TEXT["en"]["menu_button"],
    translations.TEXT["kz"]["menu_button"]
]))
async def handle_main_menu_button(message: Message, state: FSMContext):
    data = await state.get_data()
    lang = data.get("lang", "ru")
    await send_main_menu(message, lang)

# üîπ –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û –Ω–∞—Å"
@router.callback_query(lambda c: c.data == "about")
async def handle_about(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    lang = data.get("lang", "ru")

    about_text = {
        "ru": "‚ú®",
        "en": "‚ú®",
        "kz": "‚ú®"
    }[lang]

    body_text = {
        "ru": (
            "<b>you ‚Äî flow‚Ñ¢</b> ‚Äî —ç—Ç–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–µ-–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ —Å –æ—Å—Ç—Ä—ã–º –≥–ª–∞–∑–æ–º –∏ –≥–ª—É–±–æ–∫–æ–π —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π.\n\n"
            "–ú—ã —Å–æ–∑–¥–∞—ë–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –∏ UX-—Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ <b>—É—Å–∏–ª–∏–≤–∞—é—Ç –±—Ä–µ–Ω–¥—ã</b> –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç –∫–æ–º–∞–Ω–¥—ã.\n\n"
            "–û—Ç  –ø–µ—Ä–≤—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤ –¥–æ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã—Ö –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º ‚Äî –º—ã –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è —Ç—É–¥–∞, <b>–≥–¥–µ –≤–∞–∂–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç</b>, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–∞–∫–µ—Ç."
        ),
        "en": (
            "<b>you ‚Äî flow‚Ñ¢</b> is a product agency with sharp vision and deep expertise.\n\n"
            "We create visual and UX solutions that <b>strengthen brands</b> and inspire teams.\n\n"
            "From the first screens to scalable design systems ‚Äî we step in where <b>results matter</b>, not just mockups."
        ),
        "kz": (
            "<b>you ‚Äî flow‚Ñ¢</b> ‚Äî –∫”©–∑—ñ –∂”ô–Ω–µ “Ø–ª–∫–µ–Ω —Ç”ô–∂—ñ—Ä–∏–±–µ—Å—ñ –±–∞—Ä ”©–Ω—ñ–º –∞–≥–µ–Ω—Ç—Ç—ñ–≥—ñ –±–æ–ª—ã–ø —Ç–∞–±—ã–ª–∞–¥—ã.\n\n"
            "–ë—ñ–∑ –±—Ä–µ–Ω–¥—Ç–µ—Ä–¥—ñ –∫“Ø—à–µ–π—Ç—ñ–ø, –∫–æ–º–∞–Ω–¥–∞–ª–∞—Ä–¥—ã —à–∞–±—ã—Ç—Ç–∞–Ω–¥—ã—Ä–∞—Ç—ã–Ω –≤–∏–∑—É–∞–ª–¥—ã –∂”ô–Ω–µ UX-—à–µ—à—ñ–º–¥–µ—Ä –∂–∞—Å–∞–π–º—ã–∑.\n\n"
            "–ê–ª“õ–∞—à“õ—ã —ç–∫—Ä–∞–Ω–¥–∞—Ä–¥–∞–Ω –º–∞—Å—à—Ç–∞–±—Ç–∞–ª–∞—Ç—ã–Ω –¥–∏–∑–∞–π–Ω –∂“Ø–π–µ–ª–µ—Ä—ñ–Ω–µ –¥–µ–π—ñ–Ω ‚Äî –±—ñ–∑ –Ω”ô—Ç–∏–∂–µ –º–∞“£—ã–∑–¥—ã –±–æ–ª“ì–∞–Ω –∂–µ—Ä–¥–µ “õ–æ—Å—ã–ª–∞–º—ã–∑."
        )
    }

    await callback.message.answer(about_text)
    await callback.message.answer(body_text, parse_mode="HTML")
